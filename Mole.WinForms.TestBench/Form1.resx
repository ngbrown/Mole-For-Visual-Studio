<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhvAB/APcAAJKNi5JQQ/SFfpRRRJOOjJVRRJdSRPaGf5aSkJSPjZWQjviHgPqIgZiUkvyJgpBO
        QfWGf2tAN3REOnFCN5JPQvWFfpVQQodKPmQ9NPz8/INJPX9IPHtFOv+KhIxNQYlMP5FLPnxLQ5NOQJCL
        ibppYlhQTY2Ihv7+/lxVUv6Kg4qFg1U1LWRcWf39/W1nZYJ9e9R1btp4cfCDfGdgXs1ya+yBemtkYath
        W+N9d/r6+olRSlRMSeF6dHJsal84L4JDNoFNSP+MhbJkXYlHOoaBf5GMisdtZpxaU3ZHP5BTTHx3dYVZ
        UtjW1XZwbnpSS/f394RMQ5lTRZJWUI9LPvn5+Xl0co5IOv2Kg4aEgvLy8vb19aReV+l/ePOEfWBZV4dF
        OOXk5JdXUHx8e3xYUfqGfnFoZoNjXINGOVBHRKulo+l7dNXT0qOfnUQzLlk6M+Lh4O7u7olxbHxCNsjF
        xIxKPX8/Mq15ccvHxnVzcbh+d4CAf/Hv75+CfLCsq7CmpN/e3by1s2FXVNPQz8S/voB6d+rq6XFZVJpe
        Vdzb2kg8OPj497+7uf2IgcXCwG5raUlAPZ9lWp2Ig9DOzvn4+O7s7JuXlbOTjpyNifiDfKWYlamdmv6J
        gjkrJ453csK+vJdYUpVVSbu4t/KAeOno535jXXRjYL9uaKpxabe1tJRcV0cvKLKpp2VJQ3teWbWwramJ
        hGtfW49RScCfmpZ5c5OCf3s+Mt7S0IyNi+fm5qZuZYdrZqiRjb2wrrCKhKGVku3r6vT09PF9df6HgMmq
        pn9qZbWcl8mMh66gnaCbmphaT5dWS823s/Ps6+PY1vTz8+7k4s3KycG4tunf3aqBfpVSRN7Y1/z6+vSC
        et3LyKmVkdLKyPf4+JqQjuvU0vSDe+XOzMW3tKF1b8m8uvaGgNS8uJRZTr+qptTCv/r3982wq4p8ePSF
        fXg7LtnJxvbx8dzBvv///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH5BAEAAPAALAAAAAC8AH8AAAj/AOEJHEiwoMGDCBMqXMgQXoZCrtiwUVICzY4SGEvssOhI4iBnTxqK
        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
        EAA7
</value>
  </data>
</root>